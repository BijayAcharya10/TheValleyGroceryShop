@model ValleyGroceryShop.Models.ViewModel.UserViewModel

@{
    ViewBag.Title = "Signup";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<link href="~/rootcss/css/bootstrap2.css" rel='stylesheet' type='text/css' />
<link href="~/rootcss/css/style2.css" rel='stylesheet' type='text/css' />
<link href="~/rootcss/css/font-awesome2.css" rel="stylesheet">
<div class="login">
    <div class="main-agileits">
        <div class="form-w3agile">
            <h3>Register With Us</h3>

            @using (Html.BeginForm("Signup", "Home", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
            {
                @Html.AntiForgeryToken()


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                <div class="key">
                    <i class="fa fa-envelope" aria-hidden="true"></i>
                    @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @onfocus = "this.value = '';", @onblur = "if (this.value == '') {this.value = 'Username';}", @placeHolder = "Enter Username" })

                    <div class="clearfix"></div>
                </div>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                <div class="key">
                    <i class="fa fa-envelope" aria-hidden="true"></i>
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @onfocus = "this.value = '';", @onblur = "if (this.value == '') {this.value = 'Email';}", @placeHolder = "Enter Email" })

                    <div class="clearfix"></div>
                </div>

                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                <div class="key">
                    <i class="fa fa-lock" aria-hidden="true"></i>
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", @onfocus = "this.value = '';", @onblur = "if (this.value == '') {this.value = 'Password';}", @placeHolder = "Enter Password" })

                    <div class="clearfix"></div>
                </div>
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                <div class="key">
                    <i class="fa fa-lock" aria-hidden="true"></i>
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @onfocus = "this.value = '';", @onblur = "if (this.value == '') {this.value = 'Password';}", @placeHolder = "Retype Password" })

                    <div class="clearfix"></div>
                </div>
                <input type="submit" value="Signup">
                @ViewBag.message
            }

        </div>
    </div>
</div>
<script>
    function SubmitForm(form) {
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            $.ajax({
                type: "POST",
                url: form.action,
                data: $(form).serialize(),
                success: function (data) {
                    if (data.success) {

                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "success"
                        })

                    }
                    else {
                        $.notify(data.message, {
                            globalPosition: "top center",
                            className: "error"
                        })

                    }

                }
            });
        }
        return false;
    }
</script>


